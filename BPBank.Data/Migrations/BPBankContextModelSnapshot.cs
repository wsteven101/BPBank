// <auto-generated />
using System;
using BPBank.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BPBank.Data.Migrations
{
    [DbContext(typeof(BPBankContext))]
    partial class BPBankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BPBank.Domain.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BaseCcyCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("BaseCcyCurrencyId");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            AccNumber = "123456",
                            BaseCcyCurrencyId = 1,
                            UserId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            AccNumber = "764321",
                            BaseCcyCurrencyId = 2,
                            UserId = 1
                        },
                        new
                        {
                            AccountId = 3,
                            AccNumber = "827419",
                            BaseCcyCurrencyId = 3,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BPBank.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISOCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencys");

                    b.HasData(
                        new
                        {
                            CurrencyId = 1,
                            Description = "British Pounds",
                            ISOCode = "GBP"
                        },
                        new
                        {
                            CurrencyId = 2,
                            Description = "United States Dollars",
                            ISOCode = "USD"
                        },
                        new
                        {
                            CurrencyId = 3,
                            Description = "EU Euros",
                            ISOCode = "EUR"
                        });
                });

            modelBuilder.Entity("BPBank.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FromCcyCurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ToCcyCurrencyId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("FromCcyCurrencyId");

                    b.HasIndex("ToCcyCurrencyId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BPBank.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Fred",
                            LoginName = "fred",
                            Surname = "Flintstone"
                        },
                        new
                        {
                            UserId = 2,
                            FirstName = "Barney",
                            LoginName = "barney",
                            Surname = "Rubble"
                        });
                });

            modelBuilder.Entity("BPBank.Domain.Entities.Account", b =>
                {
                    b.HasOne("BPBank.Domain.Entities.Currency", "BaseCcy")
                        .WithMany()
                        .HasForeignKey("BaseCcyCurrencyId");

                    b.HasOne("BPBank.Domain.Entities.User", null)
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseCcy");
                });

            modelBuilder.Entity("BPBank.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("BPBank.Domain.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPBank.Domain.Entities.Currency", "FromCcy")
                        .WithMany()
                        .HasForeignKey("FromCcyCurrencyId");

                    b.HasOne("BPBank.Domain.Entities.Currency", "ToCcy")
                        .WithMany()
                        .HasForeignKey("ToCcyCurrencyId");

                    b.Navigation("Account");

                    b.Navigation("FromCcy");

                    b.Navigation("ToCcy");
                });

            modelBuilder.Entity("BPBank.Domain.Entities.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
